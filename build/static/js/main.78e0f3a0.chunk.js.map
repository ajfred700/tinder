{"version":3,"sources":["templates/Header.js","firebase.js","components/tutorials-list.component.js","services/tutorial.service.js","components/add-tutorial.component.js","App.js","serviceWorker.js","index.js"],"names":["Header","backButton","history","useHistory","className","IconButton","onClick","replace","fontSize","push","to","src","alt","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storage","firebase1","TinderCards","useState","people","setPeople","useEffect","unsubscribe","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","console","log","person","index","preventSwipe","style","backgroundImage","url","string","name","split","word","charAt","toUpperCase","slice","join","add","id","value","update","delete","AddTutorial","props","onChangeTitle","bind","onChangeDescription","saveTutorial","newTutorial","handleChange","handleUpload","state","description","published","submitted","file","FieldValue","serverTimestamp","e","this","setState","target","timestamp","Date","now","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","TutorialDataService","create","then","catch","alert","files","myname","preventDefault","ref","put","on","error","child","getDownloadURL","htmlFor","type","required","onChange","onSubmit","Component","componentClicked","LoginButton","facebookResponse","fields","callback","icon","UserScreen","user","path","exact","App","response","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.78e0f3a0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction Header({ backButton }) {\n  const history = useHistory();\n  return (\n    <div className=\"header\">\n      {backButton ? (\n        <IconButton onClick={() => history.replace(backButton)}>\n          <ArrowBackIosIcon fontSize=\"large\" />\n        </IconButton>\n      ) : (\n        <IconButton>\n          <PersonAddIcon\n            fontSize=\"large\"\n            onClick={() => history.push(\"/add-person\")}\n          />\n        </IconButton>\n      )}\n\n      <Link to=\"/\">\n        <img\n          src=\"https://lh3.googleusercontent.com/proxy/Z9Otutru6LfoEWtXaTpqLN1S3Z0BIfAmAdFO0XW9Mi3hBehbM8a_zs85ELFvkbBN2cUSRCxh6qYMNDPR2-6VCLee4mJytepBO_XiNj2fj2g3TIe0UHlh8mXwaA\"\n          alt=\"tinder logo\"\n          className=\"header__logo\"\n        />\n      </Link>\n    </div>\n  );\n}\n\nexport default Header;\n","//import firebase from 'firebase/app'\nimport 'firebase/storage'\nimport firebase from 'firebase'\n\nimport \"firebase/firestore\";\n // Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBrwXbkf9YLSwOTPcKbbOt4QipSUvrKYh4\",\n    authDomain: \"tin1-a8799.firebaseapp.com\",\n    databaseURL: \"https://tin1-a8799-default-rtdb.firebaseio.com\",\n    projectId: \"tin1-a8799\",\n    storageBucket: \"tin1-a8799.appspot.com\",\n    messagingSenderId: \"119629352260\",\n    appId: \"1:119629352260:web:49bd6e49fbaa5891491b11\",\n    measurementId: \"G-P59BZ119T3\"\n\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore()\n\nconst storage = firebase.storage()\n\n//export default firebase.firestore();\nvar firebase1 = firebase.firestore();\n\nexport  {db,\n    storage, firebase1 as default\n}\n\n","import React, {useState, useEffect} from 'react'\nimport './TinderCards.css'\nimport TinderCard from 'react-tinder-card'\nimport {db} from '../firebase'\n\nfunction TinderCards() {\n  const [people, setPeople] = useState([])\n\n  //a pecie of code run based on a con dition\n  useEffect(() => {\n    const unsubscribe = db\n      .collection('people')\n      .orderBy('timestamp', 'asc')\n      .onSnapshot(snapshot => {\n        setPeople(snapshot.docs.map(doc => doc.data()))\n      })\n\n    // clean up function\n    return () => {\n      return unsubscribe()\n    }\n  }, [])\n\n  //make the first lettr of each person capital\n  function capitalizeFirstLetter(string) {\n    return string\n      .split(' ')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ')\n  }\n\n  console.log('component render')\n\n  return (\n    <div>\n      <div className='tinderCards__cardContainer'>\n        {people.map((person, index) => (\n          <TinderCard className='swipe' preventSwipe={['up', 'down']} key={index}>\n            <div className='card' style={{backgroundImage: `url(${person.url})`}}>\n              <h3>{capitalizeFirstLetter(person.name)}</h3>\n            </div>\n          </TinderCard>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default TinderCards\n","import firebase from \"../firebase\";\n\nconst db = firebase.collection(\"/people\");\n\nclass TutorialDataService {\n  getAll() {\n    return db;\n  }\n\n  create(people) {\n    return db.add(people);\n  }\n\n  update(id, value) {\n    return db.doc(id).update(value);\n  }\n\n  delete(id) {\n    return db.doc(id).delete();\n  }\n}\n\nexport default new TutorialDataService();","import React, { Component } from \"react\";\n//import {useState} from 'react'\nimport { storage } from \"../firebase\";\nimport firebase from 'firebase'\nimport TutorialDataService from \"../services/tutorial.service\";\n\n  \nexport default class AddTutorial extends Component {\n\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.saveTutorial = this.saveTutorial.bind(this);\n    this.newTutorial = this.newTutorial.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n    \n\n    this.state = {\n      name: \"\",\n      description: \"\",\n      published: false,\n\n      submitted: false,\n      file: \"\",\n      name: \"\",\n      url: \"\",\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n\n\n    };\n    \n    \n  }\n \n\n  /* storage */\n  \n\n  onChangeTitle(e) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  saveTutorial() {\n    const timestamp = Date.now();\n    console.log(new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(timestamp));\n\n    let data = {\n      timestamp: this.state.timestamp,\n      name: this.state.name,\n      description: this.state.description,\n      published: false,\n      url: this.state.url\n    };\n\n    TutorialDataService.create(data)\n      .then(() => {\n        console.log(\"Created new item successfully!\");\n        this.setState({\n          submitted: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  newTutorial() {\n    this.setState({\n      name: \"\",\n      description: \"\",\n      published: false,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n\n      submitted: false,\n    });\n  }\n\n  handleChange(e) {\n    alert(\"e: \" + e.target.files[0]);\n    alert(\"e: \" + e.target.files[0].name);\n\n    this.setState({\n        file: e.target.files[0],\n        name: e.target.files[0].name\n      });\n  }\n\n  handleUpload(e) {\n    let myname = this.state.name;\n    alert(\"uploading...\" + myname);\n    e.preventDefault();\n    const uploadTask = storage.ref(`/images/${this.state.name}`).put(this.state.file);\n    uploadTask.on(\"state_changed\", console.log, console.error, () => {\n      storage\n        .ref(\"images\")\n        .child(this.state.name)\n        .getDownloadURL()\n        .then((url) => {\n          //this.setFile(null);\n          this.setState({url: url});\n        });\n    });\n  }\n\n  \n  render() {\n//    function App() {\n\n    //const allInputs = {imgUrl: ''}\n    //const [imageAsFile, setImageAsFile] = useState('')\n    //const [imageAsUrl, setImageAsUrl] = useState(allInputs)\n \n  \n   \n\n\n   // }\n    return (\n\n        \n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div> \n            <div className=\"form-group\">\n             Aquí podras subir tus imagenes\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Nombre </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={this.state.name}\n                onChange={this.onChangeTitle}\n                name=\"title\"\n              />\n            </div>\n\n            \n\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n     \n     <div className=\"App\">\n\n      <form onSubmit={this.handleUpload}>\n        <input type=\"file\" onChange={this.handleChange} />\n        <button >upload to firebase</button>\n      </form>\n      {this.state.url}\n      <img src={this.state.url} alt=\"\" />\n    </div>\n     \n      </div>\n    );\n  }\n}","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Header from \"./templates/Header\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport TutorialsList from \"./components/tutorials-list.component\";\nimport AddTutorial from \"./components/add-tutorial.component\";\nimport FacebookLoginWithButton from \"react-facebook-login\";\n\nconst componentClicked = () => {\n  console.log(\"Clicked!\");\n};\n\nconst LoginButton = ({ facebookResponse }) => (\n  <FacebookLoginWithButton \n    appId=\"807505486520816\"\n    // autoLoad\n    fields=\"name,email,picture\"\n    onClick={componentClicked}\n    callback={facebookResponse}\n    icon=\"fa-facebook\"\n  />\n);\n\nconst UserScreen = ({ user }) => (\n  <>\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/add-person\">\n            <Header />\n            <AddTutorial />\n          </Route>\n          <Route exact path=\"/\">\n            <Header />\n            <TutorialsList />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  </>\n);\n\nclass App extends React.Component {\n  state = { user: false };\n  facebookResponse = (response) => {\n    console.log(response);\n    this.setState({ ...this.state, user: response });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.user ? (\n          <UserScreen user={this.state.user} />\n        ) : (\n          <LoginButton facebookResponse={this.facebookResponse} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}